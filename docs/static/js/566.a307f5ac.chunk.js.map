{"version":3,"file":"static/js/566.a307f5ac.chunk.js","mappings":"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","sources":["assets/svg/icon-arrow-left.jsx","assets/svg/icon-arrow-right.jsx","base-ui/indicator/style.js","base-ui/indicator/index.jsx","components/room-item/style.js","components/room-item/index.jsx","views/entire/style.js","views/entire/c-cpns/entire-filter/style.js","views/entire/c-cpns/entire-filter/index.jsx","store/modules/entire/createAction.js","views/entire/c-cpns/entire-rooms/style.js","views/entire/c-cpns/entire-rooms/index.jsx","views/entire/c-cpns/entire-pagination/style.js","views/entire/c-cpns/entire-pagination/index.jsx","views/entire/index.jsx"],"sourcesContent":["import React, { memo } from 'react'\nimport styleStrToObj from './utils'\n\nconst IconArrowLeft = memo((props) => {\n  const {width=12, height=12} = props\n  return (\n    <svg viewBox=\"0 0 18 18\" role=\"img\" aria-hidden=\"false\" aria-label=\"previous\" focusable=\"false\" style={styleStrToObj(`height: ${height}px; width: ${width}px; display: block; fill: currentcolor;`)}><path d=\"m13.7 16.29a1 1 0 1 1 -1.42 1.41l-8-8a1 1 0 0 1 0-1.41l8-8a1 1 0 1 1 1.42 1.41l-7.29 7.29z\" fillRule=\"evenodd\"></path></svg>\n  )\n})\n\nexport default IconArrowLeft\n","import React, { memo } from 'react'\nimport styleStrToObj from './utils'\n\nconst IconArrowRight = memo((props) => {\n  const {width=12, height=12} = props\n  return (\n    <svg viewBox=\"0 0 18 18\" role=\"img\" aria-hidden=\"false\" aria-label=\"next\" focusable=\"false\" style={styleStrToObj(`height: ${height}px; width: ${width}px; display: block; fill: currentcolor;`)}><path d=\"m4.29 1.71a1 1 0 1 1 1.42-1.41l8 8a1 1 0 0 1 0 1.41l-8 8a1 1 0 1 1 -1.42-1.41l7.29-7.29z\" fillRule=\"evenodd\"></path></svg>\n  )\n})\n\nexport default IconArrowRight\n","import styled from \"styled-components\";\r\n\r\nexport const IWrapper = styled.div `\r\n  overflow: hidden;\r\n .i-content {\r\n    position: relative;\r\n    display: flex;\r\n    transition: transform 200ms ease;\r\n    > * {\r\n      flex-shrink: 0;\r\n    }\r\n  }\r\n`\r\n","import PropTypes from 'prop-types'\r\nimport React, { memo, useEffect, useRef } from 'react'\r\nimport { IWrapper } from './style'\r\n\r\nconst Indicator = memo((props) => {\r\n  const {selectIndex} = props\r\n  const contentRef = useRef()\r\n\r\n  useEffect(()=> {\r\n    const totalWidth = contentRef.current.clientWidth // 当前区域可视宽度\r\n    const itemWidth = contentRef.current.children[selectIndex].clientWidth // item自身宽度\r\n    const itemLeft = contentRef.current.children[selectIndex].offsetLeft  // item距离可视div左侧距离\r\n    const scrollWidth = contentRef.current.scrollWidth\r\n    let needScrollWidth = itemLeft + itemWidth/2 - totalWidth/2 //需要滚动的距离\r\n    if (needScrollWidth < 0) needScrollWidth = 0 //左边特殊情况处理\r\n    if (needScrollWidth > scrollWidth - totalWidth) needScrollWidth = totalWidth // 右边情况处理\r\n    contentRef.current.style.transform = `translate(${-needScrollWidth}px)`\r\n\r\n  },[selectIndex])\r\n  return (\r\n    <IWrapper>\r\n      <div className=\"i-content\" ref={contentRef}>\r\n        {props.children}\r\n      </div>\r\n    </IWrapper>\r\n  )\r\n})\r\n\r\nIndicator.propTypes = {\r\n  selectIndex: PropTypes.number\r\n}\r\n\r\nexport default Indicator\r\n","import styled from \"styled-components\";\r\n\r\nconst ItemWrapper = styled.div`\r\n  width: ${props=> props.itemWidth};\r\n  padding: 8px;\r\n  flex-shrink: 0;\r\n\r\n  .inner {\r\n    width: 100%;\r\n\r\n    .image {\r\n      position: relative;\r\n      padding: 66.66% 8px 0;\r\n      border-radius: 3px;\r\n      overflow: hidden;\r\n      img {\r\n        position: absolute;\r\n        left: 0;\r\n        top: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        object-fit: cover;\r\n      }\r\n    }\r\n\r\n    .swiper {\r\n      position: relative;\r\n      cursor: pointer;\r\n      &:hover{\r\n        .control {\r\n          display: flex;\r\n        }\r\n      }\r\n      .control {\r\n        display: none;\r\n        color: #fff;\r\n        position: absolute;\r\n        left: 0;\r\n        right: 0;\r\n        top: 0;\r\n        bottom: 0;\r\n        justify-content: space-between;\r\n\r\n        .btn {\r\n          display: flex;\r\n          justify-content: center;\r\n          align-items: center;\r\n          width: 83px;\r\n          height: 100%;\r\n          background: linear-gradient(to left, transparent 0%, rgba(0,0,0,0.25) 100%);\r\n          z-index: 99;\r\n          &.right {\r\n            background: linear-gradient(to right, transparent 0%, rgba(0,0,0,0.25) 100%);\r\n          }\r\n        }\r\n      }\r\n\r\n      .indicator {\r\n        width: 26%;\r\n        position: absolute;\r\n        left: 0;\r\n        right: 0;\r\n        margin: auto;\r\n        bottom: 10px;\r\n        z-index: 9;\r\n      }\r\n\r\n      .dot-item {\r\n        width: 20%;\r\n        display: flex;\r\n        justify-content: space-around;\r\n        align-items: center;\r\n\r\n        .dot {\r\n          width: 6px;\r\n          height: 6px;\r\n          background-color: #fff;\r\n          border-radius: 50%;\r\n\r\n          &.active {\r\n            width: 8px;\r\n            height: 8px;\r\n          }\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n    .desc {\r\n      margin: 10px 0 5px;\r\n      font-size: 12px;\r\n      font-weight: 700;\r\n      color: ${prop => prop.verifyColor};\r\n    }\r\n\r\n    .name {\r\n      font-size: 16px;\r\n      font-weight: bold;\r\n      overflow : hidden;\r\n      text-overflow: ellipsis;\r\n      display: -webkit-box;\r\n      -webkit-line-clamp: 2;\r\n      -webkit-box-orient: vertical;\r\n    }\r\n\r\n    .price {\r\n      font-size: 14px;\r\n      margin: 10px 0 5px;\r\n      font-weight: 700;\r\n    }\r\n\r\n    .ratng {\r\n      .css-34he1w-MuiRating-decimal{\r\n        margin-right: -2px;\r\n      }\r\n\r\n      .reviews_count {\r\n        display: inline-block;\r\n        margin: 0 0 0 4px;\r\n      }\r\n\r\n      .extra {\r\n        font-weight: bold; \r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default ItemWrapper\r\n","import PropTypes from 'prop-types'\r\nimport React, { memo, useRef, useState } from 'react'\r\nimport ItemWrapper from './style'\r\nimport Rating from '@mui/material/Rating';\r\nimport IconArrowLeft from '@/assets/svg/icon-arrow-left';\r\nimport IconArrowRight from '@/assets/svg/icon-arrow-right';\r\nimport Indicator from '@/base-ui/indicator';\r\nimport classNames from 'classnames'\r\n\r\nimport { Carousel } from 'antd';\r\n\r\nconst RoomItem = memo((props) => {\r\n  const {itemData, itemWidth='25%', itemClick} = props\r\n  const carouselRef = useRef()\r\n  const [selectIndex, setSelectIndex] = useState(0)\r\n\r\n  function controlBtnHandle(e, isRight = true) {\r\n    e.stopPropagation()\r\n    isRight ? carouselRef.current.next() : carouselRef.current.prev()\r\n\r\n    let newIndex = isRight ? selectIndex + 1 : selectIndex - 1\r\n    if (newIndex < 0) newIndex = itemData?.picture_urls.length - 1\r\n    if (newIndex > itemData?.picture_urls.length - 1) newIndex = 0\r\n    setSelectIndex(newIndex)\r\n  }\r\n\r\n  function itemClickHandle() {\r\n    if (itemClick) itemClick(itemData)\r\n  }\r\n  return (\r\n    <ItemWrapper itemWidth={itemWidth} verifyColor={itemData?.verify_info?.text_color || '#39576a'} onClick={itemClickHandle}>\r\n      <div className=\"inner\">\r\n        {\r\n          !itemData.picture_urls ? (\r\n            <div className=\"image\">\r\n              <img src={itemData.picture_url} alt=\"\" />\r\n            </div>\r\n          ) : (\r\n            <div className=\"swiper\">\r\n              <div className=\"control\">\r\n                <div className=\"btn left\" onClick={e => controlBtnHandle(e, false)}>\r\n                  <IconArrowLeft width={30} height={30} />\r\n                </div>\r\n                <div className=\"btn right\" onClick={e => controlBtnHandle(e, true)}>\r\n                  <IconArrowRight width={30} height={30}/>\r\n                </div>\r\n              </div>\r\n              <div className=\"indicator\">\r\n                <Indicator selectIndex={selectIndex}>\r\n                  {\r\n                    itemData?.picture_urls?.map((item, index)=> {\r\n                      return (\r\n                        <div className=\"dot-item\" key={item}>\r\n                          <span className={classNames('dot', {active: selectIndex === index})}></span>\r\n                        </div>\r\n                      )\r\n                    })\r\n                  }\r\n                </Indicator>\r\n              </div>\r\n              <Carousel dots={false} ref={carouselRef}>\r\n                {\r\n                  itemData?.picture_urls?.map(item => {\r\n                    return (\r\n                      <div className=\"image\" key={item}>\r\n                        <img src={item} alt=\"\" />\r\n                      </div>\r\n                    )\r\n                  })\r\n                }\r\n              </Carousel>\r\n            </div>\r\n          )\r\n        }\r\n        <div className='desc'>{itemData.verify_info.messages.join(' · ')}</div>\r\n        <div className='name'>{itemData.name}</div>\r\n        <div className=\"price\">￥{itemData.price}/晚</div>\r\n        <div className=\"ratng\">\r\n          <Rating value={itemData.star_rating ?? 5} precision={0.1} readOnly sx={{fontSize:'10px', color: itemData.star_rating_color}}></Rating>\r\n          <span className='reviews_count'>{itemData.reviews_count}</span>\r\n          {\r\n            itemData.bottom_info && <span className='extra' style={{fontSize: itemData.bottom_info.font_size + 'px' || '10px', color: itemData.bottom_info.content_color || '#767676'}}> · {itemData.bottom_info.content}</span>\r\n          }\r\n          \r\n        </div>\r\n      </div>\r\n    </ItemWrapper>\r\n  )\r\n})\r\n\r\nRoomItem.propTypes = {\r\n  itemData: PropTypes.object\r\n}\r\n\r\nexport default RoomItem\r\n","import styled from \"styled-components\";\r\n\r\nexport const EntireWrapper = styled.div`\r\n\r\n`\r\n","import styled from \"styled-components\";\n\nexport const FilterWrapper =styled.div`\n  position: fixed;\n  z-index: 199;\n  left: 0;\n  right: 0;\n  top: 80px;\n  \n  display: flex;\n  align-items: center;\n  height: 48px;\n  padding-left: 16px;\n  border-bottom: 1px solid #f2f2f2;\n  background-color: #fff;\n\n  .filter {\n    display: flex;\n\n    .item {\n      margin: 0 4px 0 8px;\n      padding: 6px 12px;\n      border: 1px solid #dce0e0;\n      border-radius: 4px;\n      color: #484848;\n      cursor: pointer;\n\n      &.active {\n        background: #008489;\n        border: 1px solid #008489;\n        color: #ffffff;\n      }\n    }\n  }\n`\n","import React, { memo, useState } from 'react'\r\nimport { FilterWrapper } from './style'\r\nimport filterData from '@/assets/data/filter_data.json'\r\nimport classNames from 'classnames'\r\n\r\nconst EntireFilter = memo((props) => {\r\n\r\n  const [selectItem, setSelectItem] = useState([])\r\n\r\n  function itemClickHandle(item){\r\n    const newArr = [...selectItem]\r\n    if (newArr.includes(item)) {\r\n      const index = newArr.findIndex(newArrItem => newArrItem === item)\r\n      newArr.splice(index, 1)\r\n    } else {\r\n      newArr.push(item)\r\n    }\r\n    setSelectItem(newArr)\r\n  }\r\n\r\n  return (\r\n    <FilterWrapper>\r\n      <div className=\"filter\">\r\n        {\r\n          filterData.map(item => {\r\n            return (\r\n              <div className={classNames('item', {active: selectItem.includes(item)})} key={item} onClick={e => itemClickHandle(item)}>{item}</div>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n    </FilterWrapper>\r\n  )\r\n})\r\n\r\nEntireFilter.propTypes = {}\r\n\r\nexport default EntireFilter\r\n","import { getEntireData } from '@/services'\r\nimport * as actionTypes from './contants'\r\n\r\nexport const changeCurrentPageAction = (currentPage) => ({\r\n  type: actionTypes.CHANGE_CURRENT_PAGE,\r\n  currentPage\r\n})\r\n\r\n\r\nexport const changeRoomListAction = (roomList) => ({\r\n  type: actionTypes.CHANGE_ROOM_LIST,\r\n  roomList\r\n})\r\n\r\nexport const changeTotalCountAction = (totalCount) => ({\r\n  type: actionTypes.CHANGE_TOTAL_COUNT,\r\n  totalCount\r\n})\r\n\r\nexport const changeLoadingAction = (isLoading) => ({\r\n  type: actionTypes.CHANGE_ISLOADING,\r\n  isLoading\r\n})\r\n\r\nexport const fetchRoomListAction = () => {\r\n  return async (dispatch, getState) => {\r\n    const currentPage = getState().entire.currentPage\r\n    dispatch(changeLoadingAction(true))\r\n    const res = await getEntireData(currentPage*20)\r\n    const roomList = res.list\r\n    const totalCount = res.totalCount\r\n    dispatch(changeRoomListAction(roomList))\r\n    dispatch(changeTotalCountAction(totalCount))\r\n    dispatch(changeLoadingAction(false))\r\n  }\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const RoomWrapper = styled.div`\r\n  position: relative;\r\n  padding: 20px 16px;\r\n  box-sizing: content-box;\r\n  margin-top: 100px;\r\n\r\n  .list {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n  }\r\n\r\n  .title {\r\n    font-size: 18px;\r\n    color: #222;\r\n    font-weight: bold;\r\n    padding-left: 8px;\r\n  }\r\n\r\n  > .cover {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    background-color: rgba(255,255,255,.4);\r\n  }\r\n`\r\n","import PropTypes from 'prop-types'\r\nimport React, { memo, useCallback } from 'react'\r\nimport { RoomWrapper } from './style'\r\nimport RoomItem from '@/components/room-item'\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { changeDetailDataAction } from '@/store/modules/detail'\r\n\r\nconst EntireRooms = memo((props) => {\r\n  const {roomList, totalCount} = props\r\n  const {isLoading} = useSelector(state => ({isLoading: state.entire.isLoading}), shallowEqual)\r\n  const navigate = useNavigate()\r\n  const dispatch = useDispatch()\r\n\r\n  const itemClick = useCallback((data)=> {\r\n    dispatch(changeDetailDataAction(data))\r\n    navigate('/detail')\r\n  }, [navigate, dispatch])\r\n  return (\r\n    <RoomWrapper>\r\n      <h2 className='title'>共{totalCount}住处</h2>\r\n     <div className=\"list\">\r\n     {\r\n        roomList.map(item => {\r\n          return (\r\n            <RoomItem key={item._id} itemData={item} itemWidth=\"20%\" itemClick={itemClick}></RoomItem>\r\n          )\r\n        })\r\n      }\r\n     </div>\r\n     {isLoading && <div className=\"cover\"></div>}\r\n    </RoomWrapper>\r\n  )\r\n})\r\n\r\nEntireRooms.propTypes = {\r\n  roomList: PropTypes.array\r\n}\r\n\r\nexport default EntireRooms\r\n","import styled from \"styled-components\";\r\n\r\nexport const PagWrapper = styled.div`\r\n  margin: 30px 0;\r\n  .css-wjh20t-MuiPagination-ul{\r\n    justify-content: center;\r\n  }\r\n\r\n  .MuiPaginationItem-page.Mui-selected {\r\n    background-color: #222;\r\n  }\r\n  .MuiPaginationItem-page{\r\n    &:hover{\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n  .info {\r\n    text-align: center;\r\n    margin-top: 15px;\r\n    color: #222;\r\n  }\r\n`\r\n","import PropTypes from 'prop-types'\r\nimport React, { memo } from 'react'\r\nimport { PagWrapper } from './style'\r\nimport Pagination from '@mui/material/Pagination';\r\nimport { useDispatch } from 'react-redux';\r\nimport { changeCurrentPageAction, fetchRoomListAction } from '@/store/modules/entire/createAction';\r\n\r\nconst EntirePag = memo((props) => {\r\n  const {totalCount, currentPage} = props\r\n  const dispatch = useDispatch()\r\n\r\n  const totalPage = Math.ceil(totalCount / 20)\r\n  const startCount = currentPage * 20 + 1\r\n  const endCount = (currentPage + 1) * 20\r\n\r\n  function handleChange(e, page) {\r\n    // 回到浏览器顶部\r\n    window.scrollTo(0,0)\r\n    dispatch(changeCurrentPageAction(page-1)) // 更改state中currentPage\r\n    dispatch(fetchRoomListAction()) // 调用网络请求\r\n  }\r\n\r\n  return (\r\n    <PagWrapper>\r\n       <Pagination count={totalPage} color=\"primary\" onChange={handleChange} />\r\n       <div className=\"info\">第{startCount}-{endCount}个房源，共超过{totalCount}个</div>\r\n    </PagWrapper>\r\n  )\r\n})\r\n\r\nEntirePag.propTypes = {\r\n  totalCount: PropTypes.number,\r\n  currentPage: PropTypes.number\r\n}\r\n\r\nexport default EntirePag\r\n","import React, { memo, useEffect } from 'react'\r\nimport { EntireWrapper } from './style'\r\nimport EntireFilter from './c-cpns/entire-filter'\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\r\nimport { fetchRoomListAction } from '@/store/modules/entire/createAction'\r\nimport EntireRooms from './c-cpns/entire-rooms'\r\nimport EntirePag from './c-cpns/entire-pagination'\r\nimport { headConfigAction } from '@/store/modules/main'\r\n\r\nconst Entire = memo(() => {\r\n  window.scrollTo(0,0)\r\n  const {roomList, totalCount, currentPage} = useSelector((state) => ({\r\n    roomList:state.entire.roomList,\r\n    totalCount: state.entire.totalCount,\r\n    currentPage: state.entire.currentPage\r\n   }\r\n  ), shallowEqual)\r\n  const dispatch = useDispatch()\r\n  useEffect(()=> {\r\n    dispatch(fetchRoomListAction())\r\n    dispatch(headConfigAction({isFixed: true, topAlpha: false}))\r\n  },[dispatch])\r\n  return (\r\n    <EntireWrapper>\r\n      <EntireFilter />\r\n      <EntireRooms roomList={roomList} totalCount={totalCount}></EntireRooms>\r\n      { !!roomList.length &&<EntirePag totalCount={totalCount} currentPage={currentPage}/>}\r\n    </EntireWrapper>\r\n  )\r\n})\r\n\r\nexport default Entire\r\n "],"names":["IconArrowLeft","memo","props","width","height","viewBox","role","focusable","style","styleStrToObj","d","fillRule","IconArrowRight","IWrapper","styled","selectIndex","contentRef","useRef","useEffect","totalWidth","current","clientWidth","itemWidth","children","needScrollWidth","offsetLeft","scrollWidth","transform","className","ref","prop","verifyColor","RoomItem","itemData","itemClick","carouselRef","useState","setSelectIndex","controlBtnHandle","e","isRight","stopPropagation","next","prev","newIndex","picture_urls","length","verify_info","text_color","onClick","map","item","index","classNames","active","dots","src","alt","picture_url","messages","join","name","price","Rating","value","star_rating","precision","readOnly","sx","fontSize","color","star_rating_color","reviews_count","bottom_info","font_size","content_color","content","EntireWrapper","FilterWrapper","selectItem","setSelectItem","filterData","includes","newArr","findIndex","newArrItem","splice","push","itemClickHandle","changeRoomListAction","roomList","type","actionTypes","changeTotalCountAction","totalCount","changeLoadingAction","isLoading","fetchRoomListAction","dispatch","getState","currentPage","entire","getEntireData","res","list","RoomWrapper","useSelector","state","shallowEqual","navigate","useNavigate","useDispatch","useCallback","data","changeDetailDataAction","_id","PagWrapper","totalPage","Math","ceil","startCount","endCount","Pagination","count","onChange","page","window","scrollTo","changeCurrentPageAction","headConfigAction","isFixed","topAlpha"],"sourceRoot":""}